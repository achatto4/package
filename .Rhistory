}
p
library(Anaghpackage)
library(ggplot2)
# Generate x values
x_values <- seq(0, 10, length.out = 100)
# Generate y values for cos(x)
sin_y_values <- sin(x_values)
# Create a data frame for ggplot
data <- data.frame(x = x_values, sin_x = sin_y_values)
# Create a ggplot with sin(x) as points
p <- ggplot(data, aes(x = x, y = sin_x)) +
geom_point(shape = 1, size = 3, color = "black") +
labs(x = "x", y = "y", title = "Comparison of fun_sin(x, k) and sin(x)") +
theme_minimal()
p
# Add lines for fn_sin(x, k) for different values of k
k_values <- c(1, 3, 5, 7, 9)
for (k in k_values) {
fn_sin_y_values <- sapply(x_values, function(x) fun_sin(x, k))
data1 <- cbind(data, fn_sin_y_values)
p <- p + geom_line(data = data1, aes(x = x, y = fn_sin_y_values),  color = sample(colors(), 1))
}
p
library(Anaghpackage)
#install.packages("tidytuesdayR")
tuesdata <- tidytuesdayR::tt_load('2023-09-26')
# ## OR
# tuesdata <- tidytuesdayR::tt_load(2023, week = 39)
richmondway <- tuesdata$richmondway
dir.create("data")
saveRDS(richmondway, file = "data/richmondway.RDS")
my_data <- readRDS("~/Git code Anagh/Anaghpackage/data/richmondway.RDS")
#read the dataset
library(dplyr)
library(lubridate, warn.conflicts = FALSE)
library(forcats)
library(tidyr)
summarise(my_data)
glimpse(my_data)
count(my_data)
my_data_new=distinct(my_data)
my_data_new=as_tibble(my_data_new)
my_data_new
my_data_new=arrange(my_data_new)
#my_data_new=drop_na(my_data_new)
Sys.timezone()
ggplot(my_data_new, aes(x = Season_Episode, y = F_count_RK, group=1)) +
geom_point() +  geom_line() +
labs(
title = "Season vs F-word count distribution",
subtitle = "For Roy Kent",
caption = "Data source: Tidytuesday"
)
ggplot(my_data_new, aes(x= Imdb_rating, y=F_count_RK)) +
geom_point(data=my_data_new)+ labs(title = "ImdB rating vs F-word count distribution",
subtitle = "For Roy Kent",
caption = "Data source: Tidytuesday")
ggplot(my_data_new, aes(x= Dating_flag, y=F_count_RK)) +
geom_boxplot(data=my_data_new)+ labs(title = "Season vs F-word count distribution",
subtitle = "For Roy Kent",
caption = "Data source: Tidytuesday")
c_CI=make_ci_class(my_data_new$F_count_RK)
print(c_CI)
calculate_CI.ci_class(c_CI)
sample_mean <- function(x) {
# Add your solution here
mn=sum(x)/length(x)
return(mn)
}
sample_sd <- function(x) {
# Add your solution here
mn=sqrt(sum((x-sample_mean(x))^2)/(length(x)-1))
return(mn)
}
calculate_CI <- function(x, conf = 0.95) {
# Add your solution here
a=sample_mean(x)-qt(conf,length(x)-1)*sample_sd(x)/sqrt(length(x))
b=sample_mean(x)+qt(conf,length(x)-1)*sample_sd(x)/sqrt(length(x))
conf_int=c(a,b)
return(conf_int)
}
make_ci_class <- function(x) {
# if(length(x) != length(y))
#   stop("'x' and 'y' should be the same length")
## Create the "polygon" object
structure(list(object = x), class = "ci_class")
}
print.ci_class <- function(x, ...) {
cat("a sample with", length(x$object),
"points\n")
cat("a sample with", class(x),
"class\n")
invisible(x)
}
conf_int <- function(x) UseMethod("conf_int")
calculate_CI.ci_class <- function(x, conf = 0.95) {
# Add your solution here
a=sample_mean(x$object)-qt(conf,length(x$object)-1)*sample_sd(x$object)/sqrt(length(x))
b=sample_mean(x$object)+qt(conf,length(x$object)-1)*sample_sd(x$object)/sqrt(length(x))
conf_int=c(a,b)
conf_int
}
c_CI=make_ci_class(c(1,2,3,4,5))
print(c_CI)
calculate_CI.ci_class(c_CI)
library(Anaghpackage)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(Anaghpackage)
library(ggplot2)
# Generate x values
x_values <- seq(0, 10, length.out = 100)
# Generate y values for cos(x)
cos_y_values <- cos(x_values)
# Create a data frame for ggplot
data <- data.frame(x = x_values, cos_x = cos_y_values)
# Create a ggplot with cos(x) as points
p <- ggplot(data, aes(x = x, y = cos_x)) +
geom_point(shape = 1, size = 3, color = "black") +
labs(x = "x", y = "y", title = "Comparison of fn_cos(x, k) and cos(x)") +
theme_minimal()
p
# Add lines for fn_cos(x, k) for different values of k
k_values <- c(1, 3, 5, 7, 9)
for (k in k_values) {
fn_cos_y_values <- sapply(x_values, function(x) fn_cos(x, k))
data1 <- cbind(data, fn_cos_y_values)
p <- p + geom_line(data = data1, aes(x = x, y = fn_cos_y_values),  color = sample(colors(), 1))
}
p
library(Anaghpackage)
library(ggplot2)
# Generate x values
x_values <- seq(0, 10, length.out = 100)
# Generate y values for cos(x)
sin_y_values <- sin(x_values)
# Create a data frame for ggplot
data <- data.frame(x = x_values, sin_x = sin_y_values)
# Create a ggplot with sin(x) as points
p <- ggplot(data, aes(x = x, y = sin_x)) +
geom_point(shape = 1, size = 3, color = "black") +
labs(x = "x", y = "y", title = "Comparison of fun_sin(x, k) and sin(x)") +
theme_minimal()
p
# Add lines for fn_sin(x, k) for different values of k
k_values <- c(1, 3, 5, 7, 9)
for (k in k_values) {
fn_sin_y_values <- sapply(x_values, function(x) fun_sin(x, k))
data1 <- cbind(data, fn_sin_y_values)
p <- p + geom_line(data = data1, aes(x = x, y = fn_sin_y_values),  color = sample(colors(), 1))
}
p
library(Anaghpackage)
#install.packages("tidytuesdayR")
tuesdata <- tidytuesdayR::tt_load('2023-09-26')
# ## OR
# tuesdata <- tidytuesdayR::tt_load(2023, week = 39)
richmondway <- tuesdata$richmondway
dir.create("data")
saveRDS(richmondway, file = "data/richmondway.RDS")
my_data <- readRDS("~/Git code Anagh/Anaghpackage/data/richmondway.RDS")
#read the dataset
library(dplyr)
library(lubridate, warn.conflicts = FALSE)
library(forcats)
library(tidyr)
summarise(my_data)
glimpse(my_data)
count(my_data)
my_data_new=distinct(my_data)
my_data_new=as_tibble(my_data_new)
my_data_new
my_data_new=arrange(my_data_new)
#my_data_new=drop_na(my_data_new)
Sys.timezone()
ggplot(my_data_new, aes(x = Season_Episode, y = F_count_RK, group=1)) +
geom_point() +  geom_line() +
labs(
title = "Season vs F-word count distribution",
subtitle = "For Roy Kent",
caption = "Data source: Tidytuesday"
)
ggplot(my_data_new, aes(x= Imdb_rating, y=F_count_RK)) +
geom_point(data=my_data_new)+ labs(title = "ImdB rating vs F-word count distribution",
subtitle = "For Roy Kent",
caption = "Data source: Tidytuesday")
ggplot(my_data_new, aes(x= Dating_flag, y=F_count_RK)) +
geom_boxplot(data=my_data_new)+ labs(title = "Season vs F-word count distribution",
subtitle = "For Roy Kent",
caption = "Data source: Tidytuesday")
c_CI=make_ci_class(my_data_new$F_count_RK)
print(c_CI)
calculate_CI.ci_class(c_CI)
library(Anaghpackage)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(Anaghpackage)
library(ggplot2)
# Generate x values
x_values <- seq(0, 10, length.out = 100)
# Generate y values for cos(x)
cos_y_values <- cos(x_values)
# Create a data frame for ggplot
data <- data.frame(x = x_values, cos_x = cos_y_values)
# Create a ggplot with cos(x) as points
p <- ggplot(data, aes(x = x, y = cos_x)) +
geom_point(shape = 1, size = 3, color = "black") +
labs(x = "x", y = "y", title = "Comparison of fn_cos(x, k) and cos(x)") +
theme_minimal()
p
# Add lines for fn_cos(x, k) for different values of k
k_values <- c(1, 3, 5, 7, 9)
for (k in k_values) {
fn_cos_y_values <- sapply(x_values, function(x) fn_cos(x, k))
data1 <- cbind(data, fn_cos_y_values)
p <- p + geom_line(data = data1, aes(x = x, y = fn_cos_y_values),  color = sample(colors(), 1))
}
p
library(Anaghpackage)
library(ggplot2)
# Generate x values
x_values <- seq(0, 10, length.out = 100)
# Generate y values for cos(x)
sin_y_values <- sin(x_values)
# Create a data frame for ggplot
data <- data.frame(x = x_values, sin_x = sin_y_values)
# Create a ggplot with sin(x) as points
p <- ggplot(data, aes(x = x, y = sin_x)) +
geom_point(shape = 1, size = 3, color = "black") +
labs(x = "x", y = "y", title = "Comparison of fun_sin(x, k) and sin(x)") +
theme_minimal()
p
# Add lines for fn_sin(x, k) for different values of k
k_values <- c(1, 3, 5, 7, 9)
for (k in k_values) {
fn_sin_y_values <- sapply(x_values, function(x) fun_sin(x, k))
data1 <- cbind(data, fn_sin_y_values)
p <- p + geom_line(data = data1, aes(x = x, y = fn_sin_y_values),  color = sample(colors(), 1))
}
p
library(Anaghpackage)
#install.packages("tidytuesdayR")
# tuesdata <- tidytuesdayR::tt_load('2023-09-26')
# # ## OR
# # tuesdata <- tidytuesdayR::tt_load(2023, week = 39)
#
# richmondway <- tuesdata$richmondway
#
#     dir.create("data")
#
#     saveRDS(richmondway, file = "data/richmondway.RDS")
my_data <- readRDS("~/Git code Anagh/Anaghpackage/data/richmondway.RDS")
#read the dataset
library(dplyr)
library(lubridate, warn.conflicts = FALSE)
library(forcats)
library(tidyr)
summarise(my_data)
glimpse(my_data)
count(my_data)
my_data_new=distinct(my_data)
my_data_new=as_tibble(my_data_new)
my_data_new
my_data_new=arrange(my_data_new)
#my_data_new=drop_na(my_data_new)
Sys.timezone()
ggplot(my_data_new, aes(x = Season_Episode, y = F_count_RK, group=1)) +
geom_point() +  geom_line() +
labs(
title = "Season vs F-word count distribution",
subtitle = "For Roy Kent",
caption = "Data source: Tidytuesday"
)
ggplot(my_data_new, aes(x= Imdb_rating, y=F_count_RK)) +
geom_point(data=my_data_new)+ labs(title = "ImdB rating vs F-word count distribution",
subtitle = "For Roy Kent",
caption = "Data source: Tidytuesday")
ggplot(my_data_new, aes(x= Dating_flag, y=F_count_RK)) +
geom_boxplot(data=my_data_new)+ labs(title = "Season vs F-word count distribution",
subtitle = "For Roy Kent",
caption = "Data source: Tidytuesday")
c_CI=make_ci_class(my_data_new$F_count_RK)
print(c_CI)
calculate_CI.ci_class(c_CI)
sample_mean <- function(x) {
# Add your solution here
mn=sum(x)/length(x)
return(mn)
}
sample_sd <- function(x) {
# Add your solution here
mn=sqrt(sum((x-sample_mean(x))^2)/(length(x)-1))
return(mn)
}
calculate_CI <- function(x, conf = 0.95) {
# Add your solution here
a=sample_mean(x)-qt(conf,length(x)-1)*sample_sd(x)/sqrt(length(x$object))
b=sample_mean(x)+qt(conf,length(x)-1)*sample_sd(x)/sqrt(length(x$object))
conf_int=c(a,b)
return(conf_int)
}
make_ci_class <- function(x) {
# if(length(x) != length(y))
#   stop("'x' and 'y' should be the same length")
## Create the "polygon" object
structure(list(object = x), class = "ci_class")
}
print.ci_class <- function(x, ...) {
cat("a sample with", length(x$object),
"points\n")
cat("a sample with", class(x),
"class\n")
invisible(x)
}
conf_int <- function(x) UseMethod("conf_int")
calculate_CI.ci_class <- function(x, conf = 0.95) {
# Add your solution here
a=sample_mean(x$object)-qt(conf,length(x$object)-1)*sample_sd(x$object)/sqrt(length(x$object))
b=sample_mean(x$object)+qt(conf,length(x$object)-1)*sample_sd(x$object)/sqrt(length(x$object))
conf_int=c(a,b)
conf_int
}
c_CI=make_ci_class(c(1,2,3,4,5))
print(c_CI)
calculate_CI.ci_class(c_CI)
calculate_CI.ci_class
c_CI=make_ci_class(my_data_new$F_count_RK)
print(c_CI)
calculate_CI.ci_class(c_CI)
vect=c(1:10)
c_CI=make_ci_class(vect)
print(c_CI)
calculate_CI.ci_class(c_CI)
?count
lubridate
library(lubridate)
?lubridate
now(tzone = "")
Sys.timezone()
now(tzone = "America/New_York")
library(Anaghpackage)
help(package="Anaghpackage")
help(package="Anaghpackage")
library(Anaghpackage)
library(Anaghpackage)
library(Anaghpackage)
help(package="Anaghpackage")
library(Anaghpackage)
library(Anaghpackage)
help(package="Anaghpackage")
library(Anaghpackage)
help(package="Anaghpackage")
library(Anaghpackage)
help(package="Anaghpackage")
library(Anaghpackage)
help(package="Anaghpackage")
library(Anaghpackage)
library(Anaghpackage)
help(package="Anaghpackage")
library(Anaghpackage)
library(Anaghpackage)
library(Anaghpackage)
calculate_CI(c(1,2,3,4,5))
library(Anaghpackage)
library(Anaghpackage)
calculate_CI(c(1,2,3,4,5))
library(Anaghpackage)
calculate_CI(c(1,2,3,4,5))
library(Anaghpackage)
calculate_CI(c(1,2,3,4,5))
ci_example=make_ci_class(c(1,2,3,4,5))
calculate_CI.ci_class(ci_example)
install.packages("usethis")
library(Anaghpackage)
ci_example=make_ci_class(c(1,2,3,4,5))
calculate_CI.ci_class(ci_example)
calculate_CI(c(1,2,3,4,5))
library(Anaghpackage)
calculate_CI <- function(x, conf = 0.95) {
# Add your solution here
a=sample_mean(x)-qt(conf,length(x)-1)*sample_sd(x)/sqrt(length(x))
b=sample_mean(x)+qt(conf,length(x)-1)*sample_sd(x)/sqrt(length(x))
conf_int=c(a,b)
return(conf_int)
}
calculate_CI( <- function(x, conf = 0.95))c(1,2,3,4,5,6,8,7)
calculate_CI( <- function(c(1,2,3,4,5,6,8,7))
calculate_CI(c(1,2,3,4,5,6,8,7))
sample_mean <- function(x) {
# Add your solution here
mn=sum(x)/length(x)
return(mn)
}
sample_sd <- function(x) {
# Add your solution here
mn=sqrt(sum((x-sample_mean(x))^2)/(length(x)-1))
return(mn)
}
calculate_CI(c(1,2,3,4,5,6,8,7))
library(Anaghpackage)
calculate_CI(c(1,2,3,4,5,6,8,7))
library(Anaghpackage)
library(Anaghpackage)
library(Anaghpackage)
library(Anaghpackage)
library(Anaghpackage)
?qt
?stats
library(Anaghpackage)
?stats
library(Anaghpackage)
library(Anaghpackage)
library(Anaghpackage)
#install.packages("tidytuesdayR")
# tuesdata <- tidytuesdayR::tt_load('2023-09-26')
# # ## OR
# # tuesdata <- tidytuesdayR::tt_load(2023, week = 39)
#
# richmondway <- tuesdata$richmondway
#
#     dir.create("data")
#
#     saveRDS(richmondway, file = "data/richmondway.RDS")
my_data <- readRDS("~data/richmondway.RDS")
library(Anaghpackage)
#install.packages("tidytuesdayR")
# tuesdata <- tidytuesdayR::tt_load('2023-09-26')
# # ## OR
# # tuesdata <- tidytuesdayR::tt_load(2023, week = 39)
#
# richmondway <- tuesdata$richmondway
#
#     dir.create("data")
#
#     saveRDS(richmondway, file = "data/richmondway.RDS")
my_data <- readRDS("~Anaghpackage/data/richmondway.RDS")
library(Anaghpackage)
#install.packages("tidytuesdayR")
tuesdata <- tidytuesdayR::tt_load('2023-09-26')
# ## OR
# tuesdata <- tidytuesdayR::tt_load(2023, week = 39)
richmondway <- tuesdata$richmondway
dir.create("data")
saveRDS(richmondway, file = "data/richmondway.RDS")
#my_data <- readRDS("~Anaghpackage/data/richmondway.RDS")
my_data= richmondway
library(Anaghpackage)
#install.packages("tidytuesdayR")
tuesdata <- tidytuesdayR::tt_load('2023-09-26')
# ## OR
# tuesdata <- tidytuesdayR::tt_load(2023, week = 39)
richmondway <- tuesdata$richmondway
# dir.create("data")
#
# saveRDS(richmondway, file = "data/richmondway.RDS")
#my_data <- readRDS("~Anaghpackage/data/richmondway.RDS")
my_data= richmondway
#read the dataset
library(dplyr)
library(lubridate, warn.conflicts = FALSE)
library(forcats)
library(tidyr)
# We summarise the data and get a glimpse of the data set using the two functions below respectively.
summarise(my_data)
glimpse(my_data)
#This functions counts the numbers of unique value corresonding to the dataset, and it helps us understand the presense of any repetitions.
count(my_data)
#We use the distinct function to find dstinct value in the data, and convert the data structure to tibble for better operationality.
my_data_new=distinct(my_data)
my_data_new=as_tibble(my_data_new)
my_data_new=arrange(my_data_new)
#We also find the current time to be able to understand the date till which the analysis is valid. The analysis might not be valid at a future date.
Sys.timezone()
now(tzone = "America/New_York")
library(Anaghpackage)
library(Anaghpackage)
help(Anaghpackage)
help(package="Anaghpackage")
library(Anaghpackage)
library(tidytuesdayR)
#install.packages("tidytuesdayR")
tuesdata <- tidytuesdayR::tt_load('2023-09-26')
# ## OR
# tuesdata <- tidytuesdayR::tt_load(2023, week = 39)
richmondway <- tuesdata$richmondway
# dir.create("data")
#
# saveRDS(richmondway, file = "data/richmondway.RDS")
#my_data <- readRDS("~Anaghpackage/data/richmondway.RDS")
my_data= richmondway
#read the dataset
library(dplyr)
library(lubridate, warn.conflicts = FALSE)
library(forcats)
library(tidyr)
# We summarise the data and get a glimpse of the data set using the two functions below respectively.
summarise(my_data)
glimpse(my_data)
#This functions counts the numbers of unique value corresonding to the dataset, and it helps us understand the presense of any repetitions.
count(my_data)
#We use the distinct function to find dstinct value in the data, and convert the data structure to tibble for better operationality.
my_data_new=distinct(my_data)
my_data_new=as_tibble(my_data_new)
my_data_new=arrange(my_data_new)
#We also find the current time to be able to understand the date till which the analysis is valid. The analysis might not be valid at a future date.
Sys.timezone()
now(tzone = "America/New_York")
